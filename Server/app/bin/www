#!/usr/bin/env node
'use strict';

var app = require('../app');
var debug = require('debug')('app:server');
var http = require('http');
var port = process.env.PORT || 5555;
app.set('port', port);

// NOTE: event listener for HTTP server 'error' event.
var onError = function(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

    // NOTE: handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
};

// NOTE: event listener for HTTP server 'listening' event.
var onListening = function() {
    var addr = server.address();
    var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    console.info('Server started up. Listening at: ' + bind);
    debug('Server started up. Listening at: ' + bind);
};

var server = http.createServer(app);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);